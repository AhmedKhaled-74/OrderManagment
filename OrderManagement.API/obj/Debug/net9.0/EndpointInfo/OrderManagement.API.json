{
  "openapi": "3.0.4",
  "info": {
    "title": "Order Management API",
    "version": "v1"
  },
  "paths": {
    "/api/v1/Account/register": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Register to the app",
        "requestBody": {
          "description": "valid register feilds",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUser"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Account/login": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Login",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUser"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Account/logout": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "logout approach",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/Account/AccessDenied": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "AccessDenied",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/Account/register/check-email": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Check Email Exists",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "email",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/Account/generate-new-token": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Generate New Token by refreshtoken",
        "requestBody": {
          "description": "exsist token",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TokenModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/Items": {
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "Retrieves all items from the system",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Items"
        ],
        "summary": "Creates a new item in the system",
        "requestBody": {
          "description": "The item data to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemAddRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ItemAddRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Items/{id}": {
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "Retrieves a specific item by its unique identifier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the item to retrieve",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Items"
        ],
        "summary": "Updates an existing item with the provided data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the item to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated item data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemUpdateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ItemUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Items"
        ],
        "summary": "Deletes an item with the specified unique identifier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the item to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/OrderItems": {
      "get": {
        "tags": [
          "OrderItems"
        ],
        "summary": "Retrieves all order items",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderItemResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "OrderItems"
        ],
        "summary": "Creates a new order item with the provided data",
        "requestBody": {
          "description": "The order item data to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderItemAddRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderItemAddRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderItemResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/OrderItems/{id}": {
      "get": {
        "tags": [
          "OrderItems"
        ],
        "summary": "Retrieves a specific order item by its unique identifier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the order item to retrieve",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderItemResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "OrderItems"
        ],
        "summary": "Updates an existing order item with the provided data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the order item to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated order item data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderItemUpdateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderItemUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "OrderItems"
        ],
        "summary": "Deletes an order item with the specified unique identifier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the order item to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/Orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Retrieves all orders including their associated order items",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Creates a new order with the provided order data",
        "requestBody": {
          "description": "The order data to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderAddRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderAddRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Orders/{id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Retrieves a specific order by its unique identifier including its order items",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the order to retrieve",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Orders"
        ],
        "summary": "Updates an existing order with the provided data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the order to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated order data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderUpdateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Orders"
        ],
        "summary": "Deletes an order with the specified unique identifier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the order to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Address": {
        "type": "object",
        "properties": {
          "addressId": {
            "type": "string",
            "format": "uuid"
          },
          "street": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "user": {
            "$ref": "#/components/schemas/AppUser"
          }
        },
        "additionalProperties": false
      },
      "AppRole": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "normalizedName": {
            "type": "string",
            "nullable": true
          },
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "normalizedUserName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "normalizedEmail": {
            "type": "string",
            "nullable": true
          },
          "emailConfirmed": {
            "type": "boolean"
          },
          "passwordHash": {
            "type": "string",
            "nullable": true
          },
          "securityStamp": {
            "type": "string",
            "nullable": true
          },
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "phoneNumberConfirmed": {
            "type": "boolean"
          },
          "twoFactorEnabled": {
            "type": "boolean"
          },
          "lockoutEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lockoutEnabled": {
            "type": "boolean"
          },
          "accessFailedCount": {
            "type": "integer",
            "format": "int32"
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          },
          "refreshTokenExpiration": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "region": {
            "type": "string",
            "nullable": true
          },
          "activeStatus": {
            "type": "string",
            "nullable": true
          },
          "profilePictureUrl": {
            "type": "string",
            "nullable": true
          },
          "appAdminId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "appAdmin": {
            "$ref": "#/components/schemas/AppUser"
          },
          "appUsers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUser"
            },
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppRole"
            },
            "nullable": true
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Item": {
        "required": [
          "itemName",
          "itemPrice"
        ],
        "type": "object",
        "properties": {
          "itemId": {
            "type": "string",
            "format": "uuid"
          },
          "itemName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "itemPrice": {
            "maximum": 79228162514264337593543950335,
            "minimum": 0.01,
            "type": "number",
            "format": "double"
          },
          "itemTotalQuantity": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ItemAddRequest": {
        "required": [
          "itemName",
          "itemPrice",
          "itemTotalQuantity"
        ],
        "type": "object",
        "properties": {
          "itemName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "itemPrice": {
            "maximum": 79228162514264337593543950335,
            "minimum": 0.01,
            "type": "number",
            "format": "double"
          },
          "itemTotalQuantity": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ItemResponse": {
        "type": "object",
        "properties": {
          "itemId": {
            "type": "string",
            "format": "uuid"
          },
          "itemName": {
            "type": "string",
            "nullable": true
          },
          "itemPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "itemTotalQuantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ItemUpdateRequest": {
        "required": [
          "itemId"
        ],
        "type": "object",
        "properties": {
          "itemId": {
            "type": "string",
            "format": "uuid"
          },
          "itemName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "itemPrice": {
            "maximum": 79228162514264337593543950335,
            "minimum": 0.01,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "itemTotalQuantity": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginDTO": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "maxLength": 20,
            "minLength": 6,
            "pattern": "^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[_@*-])[a-zA-Z0-9_@*-]{10,21}$",
            "type": "string",
            "format": "password"
          },
          "isPersistent": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Order": {
        "required": [
          "customerName",
          "orderDate"
        ],
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "format": "uuid"
          },
          "orderNumber": {
            "type": "string",
            "nullable": true
          },
          "orderDate": {
            "type": "string",
            "format": "date-time"
          },
          "customerName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "totalAmount": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "orderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderAddRequest": {
        "required": [
          "customerName"
        ],
        "type": "object",
        "properties": {
          "customerName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "OrderItem": {
        "required": [
          "itemId",
          "itemName",
          "orderId",
          "quantity",
          "unitPrice"
        ],
        "type": "object",
        "properties": {
          "orderItemId": {
            "type": "string",
            "format": "uuid"
          },
          "orderId": {
            "type": "string",
            "format": "uuid"
          },
          "itemId": {
            "type": "string",
            "format": "uuid"
          },
          "itemName": {
            "minLength": 1,
            "type": "string"
          },
          "quantity": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "unitPrice": {
            "maximum": 79228162514264337593543950335,
            "minimum": 0.01,
            "type": "number",
            "format": "double"
          },
          "totalPrice": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "item": {
            "$ref": "#/components/schemas/Item"
          }
        },
        "additionalProperties": false
      },
      "OrderItemAddRequest": {
        "required": [
          "itemId",
          "orderId",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "format": "uuid"
          },
          "itemId": {
            "type": "string",
            "format": "uuid"
          },
          "quantity": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OrderItemResponse": {
        "type": "object",
        "properties": {
          "orderItemId": {
            "type": "string",
            "format": "uuid"
          },
          "orderId": {
            "type": "string",
            "format": "uuid"
          },
          "itemId": {
            "type": "string",
            "format": "uuid"
          },
          "itemName": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "unitPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderItemUpdateRequest": {
        "required": [
          "orderItemId",
          "quantity",
          "unitPrice"
        ],
        "type": "object",
        "properties": {
          "orderItemId": {
            "type": "string",
            "format": "uuid"
          },
          "quantity": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "OrderResponse": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "format": "uuid"
          },
          "orderNumber": {
            "type": "string",
            "nullable": true
          },
          "orderDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "orderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderUpdateRequest": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "format": "uuid"
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "orderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterDTO": {
        "required": [
          "confirmPassword",
          "email",
          "fullName",
          "password"
        ],
        "type": "object",
        "properties": {
          "fullName": {
            "maxLength": 50,
            "minLength": 0,
            "pattern": "^[a-zA-Z\\s]+$",
            "type": "string"
          },
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "maxLength": 20,
            "minLength": 6,
            "pattern": "^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[_@*-])[a-zA-Z0-9_@*-]{10,21}$",
            "type": "string",
            "format": "password"
          },
          "confirmPassword": {
            "minLength": 1,
            "type": "string",
            "format": "password"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "region": {
            "maxLength": 50,
            "minLength": 0,
            "pattern": "^[a-zA-Z\\s]+$",
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "maxLength": 15,
            "minLength": 0,
            "pattern": "^\\+?[0-9\\s]+$",
            "type": "string",
            "nullable": true
          },
          "profilePictureUrl": {
            "maxLength": 350,
            "minLength": 0,
            "pattern": "^(https?://|/)[^\\s/$.?#].[^\\s]*$",
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TokenModel": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}